// generated by stringer -type=NodeTag; DO NOT EDIT

package pg_query

import "fmt"

const _NodeTag_name = "T_InvalidT_IndexInfoT_ExprContextT_ProjectionInfoT_JunkFilterT_ResultRelInfoT_EStateT_TupleTableSlotT_PlanT_ResultT_ModifyTableT_AppendT_MergeAppendT_RecursiveUnionT_BitmapAndT_BitmapOrT_ScanT_SeqScanT_IndexScanT_IndexOnlyScanT_BitmapIndexScanT_BitmapHeapScanT_TidScanT_SubqueryScanT_FunctionScanT_ValuesScanT_CteScanT_WorkTableScanT_ForeignScanT_JoinT_NestLoopT_MergeJoinT_HashJoinT_MaterialT_SortT_GroupT_AggT_WindowAggT_UniqueT_HashT_SetOpT_LockRowsT_LimitT_NestLoopParamT_PlanRowMarkT_PlanInvalItemT_PlanStateT_ResultStateT_ModifyTableStateT_AppendStateT_MergeAppendStateT_RecursiveUnionStateT_BitmapAndStateT_BitmapOrStateT_ScanStateT_SeqScanStateT_IndexScanStateT_IndexOnlyScanStateT_BitmapIndexScanStateT_BitmapHeapScanStateT_TidScanStateT_SubqueryScanStateT_FunctionScanStateT_ValuesScanStateT_CteScanStateT_WorkTableScanStateT_ForeignScanStateT_JoinStateT_NestLoopStateT_MergeJoinStateT_HashJoinStateT_MaterialStateT_SortStateT_GroupStateT_AggStateT_WindowAggStateT_UniqueStateT_HashStateT_SetOpStateT_LockRowsStateT_LimitStateT_AliasT_RangeVarT_ExprT_VarT_ConstT_ParamT_AggrefT_WindowFuncT_ArrayRefT_FuncExprT_NamedArgExprT_OpExprT_DistinctExprT_NullIfExprT_ScalarArrayOpExprT_BoolExprT_SubLinkT_SubPlanT_AlternativeSubPlanT_FieldSelectT_FieldStoreT_RelabelTypeT_CoerceViaIOT_ArrayCoerceExprT_ConvertRowtypeExprT_CollateExprT_CaseExprT_CaseWhenT_CaseTestExprT_ArrayExprT_RowExprT_RowCompareExprT_CoalesceExprT_MinMaxExprT_XmlExprT_NullTestT_BooleanTestT_CoerceToDomainT_CoerceToDomainValueT_SetToDefaultT_CurrentOfExprT_TargetEntryT_RangeTblRefT_JoinExprT_FromExprT_IntoClauseT_ExprStateT_GenericExprStateT_WholeRowVarExprStateT_AggrefExprStateT_WindowFuncExprStateT_ArrayRefExprStateT_FuncExprStateT_ScalarArrayOpExprStateT_BoolExprStateT_SubPlanStateT_AlternativeSubPlanStateT_FieldSelectStateT_FieldStoreStateT_CoerceViaIOStateT_ArrayCoerceExprStateT_ConvertRowtypeExprStateT_CaseExprStateT_CaseWhenStateT_ArrayExprStateT_RowExprStateT_RowCompareExprStateT_CoalesceExprStateT_MinMaxExprStateT_XmlExprStateT_NullTestStateT_CoerceToDomainStateT_DomainConstraintStateT_PlannerInfoT_PlannerGlobalT_RelOptInfoT_IndexOptInfoT_ParamPathInfoT_PathT_IndexPathT_BitmapHeapPathT_BitmapAndPathT_BitmapOrPathT_NestPathT_MergePathT_HashPathT_TidPathT_ForeignPathT_AppendPathT_MergeAppendPathT_ResultPathT_MaterialPathT_UniquePathT_EquivalenceClassT_EquivalenceMemberT_PathKeyT_RestrictInfoT_PlaceHolderVarT_SpecialJoinInfoT_LateralJoinInfoT_AppendRelInfoT_PlaceHolderInfoT_MinMaxAggInfoT_PlannerParamItemT_MemoryContextT_AllocSetContextT_ValueT_IntegerT_FloatT_StringT_BitStringT_NullT_ListT_IntListT_OidListT_QueryT_PlannedStmtT_InsertStmtT_DeleteStmtT_UpdateStmtT_SelectStmtT_AlterTableStmtT_AlterTableCmdT_AlterDomainStmtT_SetOperationStmtT_GrantStmtT_GrantRoleStmtT_AlterDefaultPrivilegesStmtT_ClosePortalStmtT_ClusterStmtT_CopyStmtT_CreateStmtT_DefineStmtT_DropStmtT_TruncateStmtT_CommentStmtT_FetchStmtT_IndexStmtT_CreateFunctionStmtT_AlterFunctionStmtT_DoStmtT_RenameStmtT_RuleStmtT_NotifyStmtT_ListenStmtT_UnlistenStmtT_TransactionStmtT_ViewStmtT_LoadStmtT_CreateDomainStmtT_CreatedbStmtT_DropdbStmtT_VacuumStmtT_ExplainStmtT_CreateTableAsStmtT_CreateSeqStmtT_AlterSeqStmtT_VariableSetStmtT_VariableShowStmtT_DiscardStmtT_CreateTrigStmtT_CreatePLangStmtT_CreateRoleStmtT_AlterRoleStmtT_DropRoleStmtT_LockStmtT_ConstraintsSetStmtT_ReindexStmtT_CheckPointStmtT_CreateSchemaStmtT_AlterDatabaseStmtT_AlterDatabaseSetStmtT_AlterRoleSetStmtT_CreateConversionStmtT_CreateCastStmtT_CreateOpClassStmtT_CreateOpFamilyStmtT_AlterOpFamilyStmtT_PrepareStmtT_ExecuteStmtT_DeallocateStmtT_DeclareCursorStmtT_CreateTableSpaceStmtT_DropTableSpaceStmtT_AlterObjectSchemaStmtT_AlterOwnerStmtT_DropOwnedStmtT_ReassignOwnedStmtT_CompositeTypeStmtT_CreateEnumStmtT_CreateRangeStmtT_AlterEnumStmtT_AlterTSDictionaryStmtT_AlterTSConfigurationStmtT_CreateFdwStmtT_AlterFdwStmtT_CreateForeignServerStmtT_AlterForeignServerStmtT_CreateUserMappingStmtT_AlterUserMappingStmtT_DropUserMappingStmtT_AlterTableSpaceOptionsStmtT_AlterTableMoveAllStmtT_SecLabelStmtT_CreateForeignTableStmtT_CreateExtensionStmtT_AlterExtensionStmtT_AlterExtensionContentsStmtT_CreateEventTrigStmtT_AlterEventTrigStmtT_RefreshMatViewStmtT_ReplicaIdentityStmtT_AlterSystemStmtT_A_ExprT_ColumnRefT_ParamRefT_A_ConstT_FuncCallT_A_StarT_A_IndicesT_A_IndirectionT_A_ArrayExprT_ResTargetT_TypeCastT_CollateClauseT_SortByT_WindowDefT_RangeSubselectT_RangeFunctionT_TypeNameT_ColumnDefT_IndexElemT_ConstraintT_DefElemT_RangeTblEntryT_RangeTblFunctionT_WithCheckOptionT_SortGroupClauseT_WindowClauseT_PrivGranteeT_FuncWithArgsT_AccessPrivT_CreateOpClassItemT_TableLikeClauseT_FunctionParameterT_LockingClauseT_RowMarkClauseT_XmlSerializeT_WithClauseT_CommonTableExprT_IdentifySystemCmdT_BaseBackupCmdT_CreateReplicationSlotCmdT_DropReplicationSlotCmdT_StartReplicationCmdT_TimeLineHistoryCmdT_TriggerDataT_EventTriggerDataT_ReturnSetInfoT_WindowObjectDataT_TIDBitmapT_InlineCodeBlockT_FdwRoutine"

var _NodeTag_map = map[NodeTag]string{
  0:   _NodeTag_name[0:9],
  10:  _NodeTag_name[9:20],
  11:  _NodeTag_name[20:33],
  12:  _NodeTag_name[33:49],
  13:  _NodeTag_name[49:61],
  14:  _NodeTag_name[61:76],
  15:  _NodeTag_name[76:84],
  16:  _NodeTag_name[84:100],
  100: _NodeTag_name[100:106],
  101: _NodeTag_name[106:114],
  102: _NodeTag_name[114:127],
  103: _NodeTag_name[127:135],
  104: _NodeTag_name[135:148],
  105: _NodeTag_name[148:164],
  106: _NodeTag_name[164:175],
  107: _NodeTag_name[175:185],
  108: _NodeTag_name[185:191],
  109: _NodeTag_name[191:200],
  110: _NodeTag_name[200:211],
  111: _NodeTag_name[211:226],
  112: _NodeTag_name[226:243],
  113: _NodeTag_name[243:259],
  114: _NodeTag_name[259:268],
  115: _NodeTag_name[268:282],
  116: _NodeTag_name[282:296],
  117: _NodeTag_name[296:308],
  118: _NodeTag_name[308:317],
  119: _NodeTag_name[317:332],
  120: _NodeTag_name[332:345],
  121: _NodeTag_name[345:351],
  122: _NodeTag_name[351:361],
  123: _NodeTag_name[361:372],
  124: _NodeTag_name[372:382],
  125: _NodeTag_name[382:392],
  126: _NodeTag_name[392:398],
  127: _NodeTag_name[398:405],
  128: _NodeTag_name[405:410],
  129: _NodeTag_name[410:421],
  130: _NodeTag_name[421:429],
  131: _NodeTag_name[429:435],
  132: _NodeTag_name[435:442],
  133: _NodeTag_name[442:452],
  134: _NodeTag_name[452:459],
  135: _NodeTag_name[459:474],
  136: _NodeTag_name[474:487],
  137: _NodeTag_name[487:502],
  200: _NodeTag_name[502:513],
  201: _NodeTag_name[513:526],
  202: _NodeTag_name[526:544],
  203: _NodeTag_name[544:557],
  204: _NodeTag_name[557:575],
  205: _NodeTag_name[575:596],
  206: _NodeTag_name[596:612],
  207: _NodeTag_name[612:627],
  208: _NodeTag_name[627:638],
  209: _NodeTag_name[638:652],
  210: _NodeTag_name[652:668],
  211: _NodeTag_name[668:688],
  212: _NodeTag_name[688:710],
  213: _NodeTag_name[710:731],
  214: _NodeTag_name[731:745],
  215: _NodeTag_name[745:764],
  216: _NodeTag_name[764:783],
  217: _NodeTag_name[783:800],
  218: _NodeTag_name[800:814],
  219: _NodeTag_name[814:834],
  220: _NodeTag_name[834:852],
  221: _NodeTag_name[852:863],
  222: _NodeTag_name[863:878],
  223: _NodeTag_name[878:894],
  224: _NodeTag_name[894:909],
  225: _NodeTag_name[909:924],
  226: _NodeTag_name[924:935],
  227: _NodeTag_name[935:947],
  228: _NodeTag_name[947:957],
  229: _NodeTag_name[957:973],
  230: _NodeTag_name[973:986],
  231: _NodeTag_name[986:997],
  232: _NodeTag_name[997:1009],
  233: _NodeTag_name[1009:1024],
  234: _NodeTag_name[1024:1036],
  300: _NodeTag_name[1036:1043],
  301: _NodeTag_name[1043:1053],
  302: _NodeTag_name[1053:1059],
  303: _NodeTag_name[1059:1064],
  304: _NodeTag_name[1064:1071],
  305: _NodeTag_name[1071:1078],
  306: _NodeTag_name[1078:1086],
  307: _NodeTag_name[1086:1098],
  308: _NodeTag_name[1098:1108],
  309: _NodeTag_name[1108:1118],
  310: _NodeTag_name[1118:1132],
  311: _NodeTag_name[1132:1140],
  312: _NodeTag_name[1140:1154],
  313: _NodeTag_name[1154:1166],
  314: _NodeTag_name[1166:1185],
  315: _NodeTag_name[1185:1195],
  316: _NodeTag_name[1195:1204],
  317: _NodeTag_name[1204:1213],
  318: _NodeTag_name[1213:1233],
  319: _NodeTag_name[1233:1246],
  320: _NodeTag_name[1246:1258],
  321: _NodeTag_name[1258:1271],
  322: _NodeTag_name[1271:1284],
  323: _NodeTag_name[1284:1301],
  324: _NodeTag_name[1301:1321],
  325: _NodeTag_name[1321:1334],
  326: _NodeTag_name[1334:1344],
  327: _NodeTag_name[1344:1354],
  328: _NodeTag_name[1354:1368],
  329: _NodeTag_name[1368:1379],
  330: _NodeTag_name[1379:1388],
  331: _NodeTag_name[1388:1404],
  332: _NodeTag_name[1404:1418],
  333: _NodeTag_name[1418:1430],
  334: _NodeTag_name[1430:1439],
  335: _NodeTag_name[1439:1449],
  336: _NodeTag_name[1449:1462],
  337: _NodeTag_name[1462:1478],
  338: _NodeTag_name[1478:1499],
  339: _NodeTag_name[1499:1513],
  340: _NodeTag_name[1513:1528],
  341: _NodeTag_name[1528:1541],
  342: _NodeTag_name[1541:1554],
  343: _NodeTag_name[1554:1564],
  344: _NodeTag_name[1564:1574],
  345: _NodeTag_name[1574:1586],
  400: _NodeTag_name[1586:1597],
  401: _NodeTag_name[1597:1615],
  402: _NodeTag_name[1615:1637],
  403: _NodeTag_name[1637:1654],
  404: _NodeTag_name[1654:1675],
  405: _NodeTag_name[1675:1694],
  406: _NodeTag_name[1694:1709],
  407: _NodeTag_name[1709:1733],
  408: _NodeTag_name[1733:1748],
  409: _NodeTag_name[1748:1762],
  410: _NodeTag_name[1762:1787],
  411: _NodeTag_name[1787:1805],
  412: _NodeTag_name[1805:1822],
  413: _NodeTag_name[1822:1840],
  414: _NodeTag_name[1840:1862],
  415: _NodeTag_name[1862:1887],
  416: _NodeTag_name[1887:1902],
  417: _NodeTag_name[1902:1917],
  418: _NodeTag_name[1917:1933],
  419: _NodeTag_name[1933:1947],
  420: _NodeTag_name[1947:1968],
  421: _NodeTag_name[1968:1987],
  422: _NodeTag_name[1987:2004],
  423: _NodeTag_name[2004:2018],
  424: _NodeTag_name[2018:2033],
  425: _NodeTag_name[2033:2054],
  426: _NodeTag_name[2054:2077],
  500: _NodeTag_name[2077:2090],
  501: _NodeTag_name[2090:2105],
  502: _NodeTag_name[2105:2117],
  503: _NodeTag_name[2117:2131],
  504: _NodeTag_name[2131:2146],
  505: _NodeTag_name[2146:2152],
  506: _NodeTag_name[2152:2163],
  507: _NodeTag_name[2163:2179],
  508: _NodeTag_name[2179:2194],
  509: _NodeTag_name[2194:2208],
  510: _NodeTag_name[2208:2218],
  511: _NodeTag_name[2218:2229],
  512: _NodeTag_name[2229:2239],
  513: _NodeTag_name[2239:2248],
  514: _NodeTag_name[2248:2261],
  515: _NodeTag_name[2261:2273],
  516: _NodeTag_name[2273:2290],
  517: _NodeTag_name[2290:2302],
  518: _NodeTag_name[2302:2316],
  519: _NodeTag_name[2316:2328],
  520: _NodeTag_name[2328:2346],
  521: _NodeTag_name[2346:2365],
  522: _NodeTag_name[2365:2374],
  523: _NodeTag_name[2374:2388],
  524: _NodeTag_name[2388:2404],
  525: _NodeTag_name[2404:2421],
  526: _NodeTag_name[2421:2438],
  527: _NodeTag_name[2438:2453],
  528: _NodeTag_name[2453:2470],
  529: _NodeTag_name[2470:2485],
  530: _NodeTag_name[2485:2503],
  600: _NodeTag_name[2503:2518],
  601: _NodeTag_name[2518:2535],
  650: _NodeTag_name[2535:2542],
  651: _NodeTag_name[2542:2551],
  652: _NodeTag_name[2551:2558],
  653: _NodeTag_name[2558:2566],
  654: _NodeTag_name[2566:2577],
  655: _NodeTag_name[2577:2583],
  656: _NodeTag_name[2583:2589],
  657: _NodeTag_name[2589:2598],
  658: _NodeTag_name[2598:2607],
  700: _NodeTag_name[2607:2614],
  701: _NodeTag_name[2614:2627],
  702: _NodeTag_name[2627:2639],
  703: _NodeTag_name[2639:2651],
  704: _NodeTag_name[2651:2663],
  705: _NodeTag_name[2663:2675],
  706: _NodeTag_name[2675:2691],
  707: _NodeTag_name[2691:2706],
  708: _NodeTag_name[2706:2723],
  709: _NodeTag_name[2723:2741],
  710: _NodeTag_name[2741:2752],
  711: _NodeTag_name[2752:2767],
  712: _NodeTag_name[2767:2795],
  713: _NodeTag_name[2795:2812],
  714: _NodeTag_name[2812:2825],
  715: _NodeTag_name[2825:2835],
  716: _NodeTag_name[2835:2847],
  717: _NodeTag_name[2847:2859],
  718: _NodeTag_name[2859:2869],
  719: _NodeTag_name[2869:2883],
  720: _NodeTag_name[2883:2896],
  721: _NodeTag_name[2896:2907],
  722: _NodeTag_name[2907:2918],
  723: _NodeTag_name[2918:2938],
  724: _NodeTag_name[2938:2957],
  725: _NodeTag_name[2957:2965],
  726: _NodeTag_name[2965:2977],
  727: _NodeTag_name[2977:2987],
  728: _NodeTag_name[2987:2999],
  729: _NodeTag_name[2999:3011],
  730: _NodeTag_name[3011:3025],
  731: _NodeTag_name[3025:3042],
  732: _NodeTag_name[3042:3052],
  733: _NodeTag_name[3052:3062],
  734: _NodeTag_name[3062:3080],
  735: _NodeTag_name[3080:3094],
  736: _NodeTag_name[3094:3106],
  737: _NodeTag_name[3106:3118],
  738: _NodeTag_name[3118:3131],
  739: _NodeTag_name[3131:3150],
  740: _NodeTag_name[3150:3165],
  741: _NodeTag_name[3165:3179],
  742: _NodeTag_name[3179:3196],
  743: _NodeTag_name[3196:3214],
  744: _NodeTag_name[3214:3227],
  745: _NodeTag_name[3227:3243],
  746: _NodeTag_name[3243:3260],
  747: _NodeTag_name[3260:3276],
  748: _NodeTag_name[3276:3291],
  749: _NodeTag_name[3291:3305],
  750: _NodeTag_name[3305:3315],
  751: _NodeTag_name[3315:3335],
  752: _NodeTag_name[3335:3348],
  753: _NodeTag_name[3348:3364],
  754: _NodeTag_name[3364:3382],
  755: _NodeTag_name[3382:3401],
  756: _NodeTag_name[3401:3423],
  757: _NodeTag_name[3423:3441],
  758: _NodeTag_name[3441:3463],
  759: _NodeTag_name[3463:3479],
  760: _NodeTag_name[3479:3498],
  761: _NodeTag_name[3498:3518],
  762: _NodeTag_name[3518:3537],
  763: _NodeTag_name[3537:3550],
  764: _NodeTag_name[3550:3563],
  765: _NodeTag_name[3563:3579],
  766: _NodeTag_name[3579:3598],
  767: _NodeTag_name[3598:3620],
  768: _NodeTag_name[3620:3640],
  769: _NodeTag_name[3640:3663],
  770: _NodeTag_name[3663:3679],
  771: _NodeTag_name[3679:3694],
  772: _NodeTag_name[3694:3713],
  773: _NodeTag_name[3713:3732],
  774: _NodeTag_name[3732:3748],
  775: _NodeTag_name[3748:3765],
  776: _NodeTag_name[3765:3780],
  777: _NodeTag_name[3780:3803],
  778: _NodeTag_name[3803:3829],
  779: _NodeTag_name[3829:3844],
  780: _NodeTag_name[3844:3858],
  781: _NodeTag_name[3858:3883],
  782: _NodeTag_name[3883:3907],
  783: _NodeTag_name[3907:3930],
  784: _NodeTag_name[3930:3952],
  785: _NodeTag_name[3952:3973],
  786: _NodeTag_name[3973:4001],
  787: _NodeTag_name[4001:4024],
  788: _NodeTag_name[4024:4038],
  789: _NodeTag_name[4038:4062],
  790: _NodeTag_name[4062:4083],
  791: _NodeTag_name[4083:4103],
  792: _NodeTag_name[4103:4131],
  793: _NodeTag_name[4131:4152],
  794: _NodeTag_name[4152:4172],
  795: _NodeTag_name[4172:4192],
  796: _NodeTag_name[4192:4213],
  797: _NodeTag_name[4213:4230],
  900: _NodeTag_name[4230:4238],
  901: _NodeTag_name[4238:4249],
  902: _NodeTag_name[4249:4259],
  903: _NodeTag_name[4259:4268],
  904: _NodeTag_name[4268:4278],
  905: _NodeTag_name[4278:4286],
  906: _NodeTag_name[4286:4297],
  907: _NodeTag_name[4297:4312],
  908: _NodeTag_name[4312:4325],
  909: _NodeTag_name[4325:4336],
  910: _NodeTag_name[4336:4346],
  911: _NodeTag_name[4346:4361],
  912: _NodeTag_name[4361:4369],
  913: _NodeTag_name[4369:4380],
  914: _NodeTag_name[4380:4396],
  915: _NodeTag_name[4396:4411],
  916: _NodeTag_name[4411:4421],
  917: _NodeTag_name[4421:4432],
  918: _NodeTag_name[4432:4443],
  919: _NodeTag_name[4443:4455],
  920: _NodeTag_name[4455:4464],
  921: _NodeTag_name[4464:4479],
  922: _NodeTag_name[4479:4497],
  923: _NodeTag_name[4497:4514],
  924: _NodeTag_name[4514:4531],
  925: _NodeTag_name[4531:4545],
  926: _NodeTag_name[4545:4558],
  927: _NodeTag_name[4558:4572],
  928: _NodeTag_name[4572:4584],
  929: _NodeTag_name[4584:4603],
  930: _NodeTag_name[4603:4620],
  931: _NodeTag_name[4620:4639],
  932: _NodeTag_name[4639:4654],
  933: _NodeTag_name[4654:4669],
  934: _NodeTag_name[4669:4683],
  935: _NodeTag_name[4683:4695],
  936: _NodeTag_name[4695:4712],
  937: _NodeTag_name[4712:4731],
  938: _NodeTag_name[4731:4746],
  939: _NodeTag_name[4746:4772],
  940: _NodeTag_name[4772:4796],
  941: _NodeTag_name[4796:4817],
  942: _NodeTag_name[4817:4837],
  950: _NodeTag_name[4837:4850],
  951: _NodeTag_name[4850:4868],
  952: _NodeTag_name[4868:4883],
  953: _NodeTag_name[4883:4901],
  954: _NodeTag_name[4901:4912],
  955: _NodeTag_name[4912:4929],
  956: _NodeTag_name[4929:4941],
}

func (i NodeTag) String() string {
  if str, ok := _NodeTag_map[i]; ok {
    return str
  }
  return fmt.Sprintf("NodeTag(%d)", i)
}
